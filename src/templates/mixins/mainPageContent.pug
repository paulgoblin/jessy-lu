include ./images.pug

mixin pageTitle(siteData, pieceName)
    - var mainTitle = siteData.main.title.toLowerCase();
    if (pieceName)
        | #{mainTitle} | #{siteData.pieces[pieceName].title}
    else
        | #{mainTitle}

mixin mainPageTitle(siteData, pieceName)
    +pageTitle(siteData)

mixin mainPageContent(siteData, options = {})
    h1
        a.header-link(
            href="/"
            onclick='handleClientNav(event)'
            onfocus='handleDetailFocus(event)'
            ontouchstart=""
        )
            | #{siteData.main.title}
    section#main-content.main-content(class= options.detailVisible ? "detail-mode" : "")
        each seriesName in siteData.main.seriesOrder
            +seriesRow(siteData.series[seriesName], siteData)

mixin seriesRow(series, siteData)
    .series-row
        each pieceName in series.pieces
            +seriesItem(siteData.pieces[pieceName], siteData)

mixin seriesItem(piece, siteData)
    .series-item
        +detailLink(piece, siteData)

mixin detailLink(piece, siteData)
    - var mainImage = siteData.images[piece.main]
    a.detail-link(
        href=`./${piece.url}`
        onclick='handleClientNav(event)'
        onfocus='handleDetailFocus(event)'
        ontouchstart=""
    )
        +hoverIcons(piece.icons, piece.iconSizeFactor, mainImage)
        +thumbnail(mainImage)(alt=`Detail for ${piece.title}`)

mixin hoverIcons(icons, iconSizeFactor, image)
    - var formats = image.imageMetadata.webp;
    - var thumb = formats.find(f => f.url.includes('-thumb.'))
    //- actual height is 6/7 due to top margin
    - var ratio = thumb.width / (thumb.height * 6/7)
    .hover-icons(
        aria-hidden="true"
    )
        - var n = icons.length;
        - var rows = 4;
        - var cols = Math.ceil(ratio * rows)
        - var repeated = Array.from({length: (rows * cols)}, (_, i) => icons[i % n])
        each icon in repeated
            span.hover-icon(
                style=`font-size: ${Math.round(1/iconSizeFactor * 10)/10}rem`
            )
                | #{icon}


mixin debug(o)
    pre= JSON.stringify(o, null, "  ")
